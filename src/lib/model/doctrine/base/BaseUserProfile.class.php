<?php

/**
 * BaseUserProfile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $display_name
 * @property string $email
 * @property string $website_url
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer     getUserId()       Returns the current record's "user_id" value
 * @method string      getDisplayName()  Returns the current record's "display_name" value
 * @method string      getEmail()        Returns the current record's "email" value
 * @method string      getWebsiteUrl()   Returns the current record's "website_url" value
 * @method sfGuardUser getSfGuardUser()  Returns the current record's "sfGuardUser" value
 * @method UserProfile setUserId()       Sets the current record's "user_id" value
 * @method UserProfile setDisplayName()  Sets the current record's "display_name" value
 * @method UserProfile setEmail()        Sets the current record's "email" value
 * @method UserProfile setWebsiteUrl()   Sets the current record's "website_url" value
 * @method UserProfile setSfGuardUser()  Sets the current record's "sfGuardUser" value
 * 
 * @package    musique-approximative
 * @subpackage model
 * @author     Tristan Rivoallan <tristan@rivoallan.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserProfile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_profile');
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('display_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('website_url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));


        $this->index('email_index', array(
             'fields' => 
             array(
              0 => 'email',
             ),
             'unique' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}